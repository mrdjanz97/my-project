{"version":3,"file":"index.js","sources":["../../../../src/lib/background/services/fetch.ts","../../../../src/pages/background/index.ts"],"sourcesContent":["import supabase from '@src/supabase_client';\r\n\r\nexport class FetchService {\r\n  constructor() {}\r\n\r\n  async fetchData() {\r\n    try {\r\n      const countries = supabase.from('countries').select();\r\n      return { data: countries, error: null };\r\n    } catch (ex) {\r\n      return { data: null, error: ex.error };\r\n    }\r\n  }\r\n}\r\n","import reloadOnUpdate from 'virtual:reload-on-update-in-background-script';\r\nimport browser from 'webextension-polyfill';\r\n// import supabase from '../../supabase_client';\r\nimport { CommandType } from '@pages/models/command_type';\r\nimport { FetchService } from '@src/lib/background/services/fetch';\r\nimport { AuthService } from '@src/lib/core/auth/auth.service';\r\nimport { Message } from '@src/lib/background/models/message.type';\r\n\r\nreloadOnUpdate('pages/background');\r\n\r\n/**\r\n * Extension reloading is necessary because the browser automatically caches the css.\r\n * If you do not use the css of the content script, please delete it.\r\n */\r\nreloadOnUpdate('pages/content/style.scss');\r\nconsole.log('background loaded');\r\n\r\nconst newTabUrl = './src/pages/newtab/index.html';\r\n\r\ntype ResponseCallback = (data: any) => void;\r\nconst authService = new AuthService();\r\nconst fetchService = new FetchService();\r\n\r\nasync function handleMessage({ action, value }: Message, response: ResponseCallback) {\r\n  switch (action) {\r\n    case CommandType.fetch: {\r\n      response(await fetchService.fetchData());\r\n      return;\r\n    }\r\n    case CommandType.signIn: {\r\n      response(authService.signInUser(value));\r\n      return;\r\n    }\r\n    case CommandType.getSession: {\r\n      response(authService.getSession());\r\n      return;\r\n    }\r\n    case CommandType.signOut: {\r\n      response(authService.signOutUser());\r\n      return;\r\n    }\r\n    default: {\r\n      response({ data: null, error: 'Unknown action' });\r\n      return;\r\n    }\r\n  }\r\n}\r\n\r\nbrowser.runtime.onMessage.addListener((msg, sender, response) => {\r\n  handleMessage(msg, response);\r\n  return true;\r\n});\r\n\r\nchrome.action.onClicked.addListener(() => {\r\n  chrome.tabs.create({\r\n    url: chrome.runtime.getURL(newTabUrl),\r\n  });\r\n});\r\n"],"names":[],"mappings":";;;;AAEO,MAAM,aAAa;AAAA,EACxB,cAAc;AAAA,EAAC;AAAA,EAEf,MAAM,YAAY;AACZ,QAAA;AACF,YAAM,YAAY,SAAS,KAAK,WAAW,EAAE,OAAO;AACpD,aAAO,EAAE,MAAM,WAAW,OAAO,KAAK;AAAA,aAC/B,IAAI;AACX,aAAO,EAAE,MAAM,MAAM,OAAO,GAAG,MAAM;AAAA,IACvC;AAAA,EACF;AACF;ACEA,QAAQ,IAAI,mBAAmB;AAE/B,MAAM,YAAY;AAGlB,MAAM,cAAc,IAAI;AACxB,MAAM,eAAe,IAAI;AAEzB,eAAe,cAAc,EAAE,QAAQ,MAAA,GAAkB,UAA4B;AACnF,UAAQ,QAAQ;AAAA,IACd,KAAK,YAAY,OAAO;AACb,eAAA,MAAM,aAAa,UAAA,CAAW;AACvC;AAAA,IACF;AAAA,IACA,KAAK,YAAY,QAAQ;AACd,eAAA,YAAY,WAAW,KAAK,CAAC;AACtC;AAAA,IACF;AAAA,IACA,KAAK,YAAY,YAAY;AAClB,eAAA,YAAY,YAAY;AACjC;AAAA,IACF;AAAA,IACA,KAAK,YAAY,SAAS;AACf,eAAA,YAAY,aAAa;AAClC;AAAA,IACF;AAAA,IACA,SAAS;AACP,eAAS,EAAE,MAAM,MAAM,OAAO,iBAAkB,CAAA;AAChD;AAAA,IACF;AAAA,EACF;AACF;AAEA,QAAQ,QAAQ,UAAU,YAAY,CAAC,KAAK,QAAQ,aAAa;AAC/D,gBAAc,KAAK,QAAQ;AACpB,SAAA;AACT,CAAC;AAED,OAAO,OAAO,UAAU,YAAY,MAAM;AACxC,SAAO,KAAK,OAAO;AAAA,IACjB,KAAK,OAAO,QAAQ,OAAO,SAAS;AAAA,EAAA,CACrC;AACH,CAAC;"}